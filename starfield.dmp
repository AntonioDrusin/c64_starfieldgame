00001  0000             ; 10 SYS (2096)
00002  0001             
00003  0001             GENERATETO STARFIELD.PRG
00004  0001             DEBUGSTARTADDRESS START
00005  0001             
00006  0001             VIC_COLOR  = $D800
00007  0001             
00008  0001             ; COLORS
00009  0001             VIC_BLACK  = $00
00010  0001             VIC_WHITE  = $01
00011  0001             VIC_RED    = $02
00012  0001             VIC_CYAN   = $03
00013  0001             VIC_VIOLET = $04
00014  0001             VIC_GREEN  = $05
00015  0001             VIC_BLUE   = $06
00016  0001             VIC_YELLOW = $07
00017  0001             VIC_ORANGE = $08
00018  0001             VIC_BROWN  = $09
00019  0001             VIC_LIGHTRED = $0A
00020  0001             VIC_DARKGREY = $0B
00021  0001             VIC_GREY   = $0C
00022  0001             VIC_LIGHTGREEN = $0D
00023  0001             VIC_LIGHTBLUE = $0E
00024  0001             VIC_LIGHTGRAY = $0F
00025  0001             
00026  0001             ; REGISTERS
00027  0001             
00028  0001             ; SPRITES
00029  0001             VIC_SP0_X  = $D000
00030  0001             VIC_SP0_Y  = $D001
00031  0001             VIC_SP1_X  = $D002
00032  0001             VIC_SP1_Y  = $D003
00033  0001             VIC_SP2_X  = $D004
00034  0001             VIC_SP2_Y  = $D005
00035  0001             VIC_SP3_X  = $D006
00036  0001             VIC_SP3_Y  = $D007
00037  0001             VIC_SP4_X  = $D008
00038  0001             VIC_SP4_Y  = $D009
00039  0001             VIC_SP5_X  = $D00A
00040  0001             VIC_SP5_Y  = $D00B
00041  0001             VIC_SP6_X  = $D00C
00042  0001             VIC_SP6_Y  = $D00D
00043  0001             VIC_SP7_X  = $D00E
00044  0001             VIC_SP7_Y  = $D00F
00045  0001             VIC_SPX    = $D010
00046  0001             
00047  0001             ; COLORS
00048  0001             VIC_BORDERC = $D020
00049  0001             VIC_BG0C   = $D021
00050  0001             VIC_BG1C   = $D022
00051  0001             VIC_BG2C   = $D023
00052  0001             VIC_BG3C   = $D024
00053  0001             VIC_SP0MC  = $D025
00054  0001             VIC_SP1MC  = $D026
00055  0001             VIC_SP0C   = $D027
00056  0001             VIC_SP1C   = $D028
00057  0001             VIC_SP2C   = $D029
00058  0001             VIC_SP3C   = $D02A
00059  0001             VIC_SP4C   = $D02B
00060  0001             VIC_SP5C   = $D02C
00061  0001             VIC_SP6C   = $D02D
00062  0001             VIC_SP7C   = $D02E
00063  0001             
00064  0001             
00065  0001             ; CONTROL
00066  0001             VIC_MEM    = $D018
00067  0001             VIC_RASTER = $D012
00068  0001             
00069  0001             ; CIAB
00070  0001             CIAB_PRA   = $DD00
00071  0001             
00072  0001             
00073  0001             DEFM       ADDAW
00074  0001                        CLC
00075  0001                        LDA /2
00076  0001                        ADC #</1
00077  0001                        STA /2
00078  0001                        LDA /2+1
00079  0001                        ADC #>/1
00080  0001                        STA /2+1
00081  0001                        
00082  0001                        ENDM
00083  0001             
00084  0001             
00085  0001             DEFM       MOVEW
00086  0001                        LDA #</1
00087  0001                        STA /2
00088  0001                        LDA #>/1
00089  0001                        STA /2+1
00090  0001                        ENDM
00091  0001             
00092  0001                        
00093  0001             
00094  0001             *=$0801
00095  0801             
00096  0801  0E 08 0A              BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $32, $30, $39, $36, $29, $00, $00, $00
00097  0810             
00098  0810             *=$830
00099  0830             
00100  0830             SCREEN     = $8400
00101  0830             CHARS      = $B000
00102  0830             CHARSETEND = $BFFF
00103  0830             
00104  0830             ; STARSCROLLER
00105  0830             STARCHAR   = 36
00106  0830             STAR_CHARS0 = CHARS+288
00107  0830             STAR_CHARS1 = CHARS+296
00108  0830             
00109  0830             ; *********************
00110  0830             ; ZERO PAGE VARIABLES
00111  0830             ; *********************
00112  0830             
00113  0830             ; VARIABLES
00114  0830             SCRPTR     = $10    ; FOR CHARACTER FILLING
00115  0830             ATEMP      = $12    ; STORE A SOMETIMES
00116  0830             FRAMECT    = $13
00117  0830             CURCOLOR   = $14   ; WORD
00118  0830             CURPTR     = $16   ; GENERIC POINTER
00119  0830             CURSCRNPTR = $18   ; GENERIC SCREEN POINTER
00120  0830             DELAY      = $20
00121  0830             DELTA      = $21   ; DELTA CHARACTERS FOR SCREEN SCROLL
00122  0830             
00123  0830             ; TEMP VARIABLES FOR PROGRAMS:
00124  0830             ; $FF DESCENDING
00125  0830             
00126  0830             
00127  0830             
00128  0830             OB_TYPE    = 0
00129  0830             OB_H       = 1
00130  0830             OB_L       = 2
00131  0830             OB_Y       = 3
00132  0830             OB_X1      = 4
00133  0830                        
00134  0830             START
00135  0830  20 5F 0A              JSR     INITLEVEL
00136  0833             
00137  0833                        ; DISABLE CIA INTERRUPT (IS THIS ON BY DEFAULT FOR BASIC?)
00138  0833                        ; THIS IS IMPORTANT OR THE COPY CHAR ROUTINE WILL CRASH FOR SOME REASON
00139  0833  AD 0E DC              LDA $DC0E
00140  0836  29 FE                 AND #$FE
00141  0838  8D 0E DC              STA $DC0E
00142  083B                        ; DISABLE ALL CPU INTERRUPT
00143  083B  78                    SEI
00144  083C                        
00145  083C  20 33 0A              JSR INITMULTABLE
00146  083F             
00147  083F                        ; DEBUG HERE
00148  083F                        ; END DEBUG
00149  083F             
00150  083F  A5 01                 LDA $1
00151  0841  29 FB                 AND #$FB
00152  0843  85 01                 STA $1   ; CHAR ROM VISIBLE AT $D000
00153  0845             
00154  0845             
00155  0845                        ; **********
00156  0845                        ; COPY CHARS
00157  0845                        ; **********
00158  0845             
00159  0845                        ; HTTPS://WWW.PAGETABLE.COM/C64REF/C64DISASM/
00160  0845  A9 00                 LDA #$0
00161  0847  A0 D0                 LDY #$D0
00162  0849  85 5F                 STA 95
00163  084B  84 60                 STY 96
00164  084D  A9 FF                 LDA #$FF
00165  084F  A0 DF                 LDY #$DF
00166  0851  85 5A                 STA 90
00167  0853  84 5B                 STY 91
00168  0855  A9 FF                 LDA #<CHARSETEND         ; MUST KEEP THESE VALUES IN A AND Y
00169  0857  A0 BF                 LDY #>CHARSETEND
00170  0859  85 58                 STA 88
00171  085B  84 59                 STY 89
00172  085D  20 BF A3              JSR $A3BF       ; BLOCK COPY
00173  0860             
00174  0860  A5 01                 LDA $1
00175  0862  29 F8                 AND #$F8
00176  0864  09 05                 ORA #$05        ; ALL RAM, EXCEPT FOR I/O
00177  0866  85 01                 STA $1
00178  0868             
00179  0868             
00180  0868                        
00181  0868                        ; VIC II ON BANK 2 ($8000-$BFFF)
00182  0868  AD 00 DD              LDA CIAB_PRA
00183  086B  29 FC                 AND #$FC
00184  086D  09 01                 ORA #$1
00185  086F  8D 00 DD              STA CIAB_PRA
00186  0872                        
00187  0872             
00188  0872                        ; SELECT VIC CHARACTER BANK TO $3000
00189  0872  AD 18 D0              LDA VIC_MEM     ; DEFAULT $15
00190  0875  29 F0                 AND #$F0
00191  0877  09 0C                 ORA #$0C
00192  0879  8D 18 D0              STA VIC_MEM       ; $1C
00193  087C             
00194  087C             
00195  087C                        ; ******************************************
00196  087C                        ; FILL SCREEN WITH ALTERNATING BC CHARACTERS
00197  087C                        ; ******************************************
00198  087C             
00199  087C             
00200  087C             
00201  087C  A9 00                 LDA #<SCREEN
00202  087E  85 10                 STA SCRPTR
00203  0880  A9 84                 LDA #>SCREEN
00204  0882  85 11                 STA SCRPTR+1
00205  0884  A2 19                 LDX #25                ; 25 LINES
00206  0886  A9 24                 LDA #STARCHAR          ; FIRST OF TWO ALTERNATING CHARS
00207  0888             @ROWLOOP
00208  0888  A0 27                 LDY #39
00209  088A             @LOOP      
00210  088A  91 10                 STA (SCRPTR),Y
00211  088C  49 01                 EOR #$1                 ; OTHER CHARACTER
00212  088E  88                    DEY
00213  088F  10 F9                 BPL @LOOP
00214  0891                        
00215  0891  49 01                 EOR #$1
00216  0893                        
00217  0893  85 12                 STA ATEMP
00218  0895             
00219  0895             
00220  0895  18                    CLC
00221  0896  A5 10                 LDA SCRPTR
00222  0898  69 28                 ADC #<40
00223  089A  85 10                 STA SCRPTR
00224  089C  A5 11                 LDA SCRPTR+1
00225  089E  69 00                 ADC #>40
00226  08A0  85 11                 STA SCRPTR+1
00227  08A2                        
00228  08A2  A5 12                 LDA ATEMP
00229  08A4                        
00230  08A4  CA                    DEX
00231  08A5  D0 E1                 BNE @ROWLOOP
00232  08A7             
00233  08A7                        ; ************
00234  08A7                        ; SETUP COLORS
00235  08A7                        ; ************
00236  08A7  A9 00                 LDA     #$0
00237  08A9  8D 20 D0              STA     $D020   ; BORDER
00238  08AC  8D 21 D0              STA     $D021   ; BACKGROUND
00239  08AF             
00240  08AF             
00241  08AF  A9 00                 LDA     #<VIC_COLOR
00242  08B1  85 14                 STA     CURCOLOR
00243  08B3  A9 D8                 LDA     #>VIC_COLOR
00244  08B5  85 15                 STA     CURCOLOR+1
00245  08B7             
00246  08B7  A9 06                 LDA     #VIC_BLUE
00247  08B9  20 1C 0A              JSR     TRIBAND
00248  08BC  A9 0E                 LDA     #VIC_LIGHTBLUE
00249  08BE  20 1C 0A              JSR     TRIBAND
00250  08C1  A9 07                 LDA     #VIC_YELLOW
00251  08C3  20 1C 0A              JSR     TRIBAND
00252  08C6  A9 01                 LDA     #VIC_WHITE
00253  08C8  20 1C 0A              JSR     TRIBAND
00254  08CB  A9 01                 LDA     #VIC_WHITE
00255  08CD  20 1C 0A              JSR     TRIBAND
00256  08D0  A9 07                 LDA     #VIC_YELLOW
00257  08D2  20 1C 0A              JSR     TRIBAND
00258  08D5  A9 0A                 LDA     #VIC_LIGHTRED
00259  08D7  20 1C 0A              JSR     TRIBAND
00260  08DA  A9 02                 LDA     #VIC_RED
00261  08DC  20 1C 0A              JSR     TRIBAND
00262  08DF             
00263  08DF             
00264  08DF                        ; ********************
00265  08DF                        ; PREP STAR CHARACTERS
00266  08DF                        ; ********************
00267  08DF             
00268  08DF                        ; STARS ARE ON LINE 3
00269  08DF                        ; AND ON LINE 7
00270  08DF  A9 00                 LDA #$0
00271  08E1  A2 0F                 LDX #15
00272  08E3             @NULCHAR
00273  08E3  9D 20 B1              STA STAR_CHARS0,X
00274  08E6  CA                    DEX
00275  08E7  10 FA                 BPL @NULCHAR
00276  08E9             
00277  08E9  A9 10                 LDA #$10
00278  08EB  8D 23 B1              STA STAR_CHARS0+3
00279  08EE  A9 02                 LDA #$02
00280  08F0  8D 2F B1              STA STAR_CHARS1+7
00281  08F3             
00282  08F3             
00283  08F3             
00284  08F3                        ; *********
00285  08F3                        ; MAIN LOOP
00286  08F3                        ; *********
00287  08F3             
00288  08F3  A9 00                 LDA     #$00
00289  08F5  85 13                 STA     FRAMECT
00290  08F7             FOREVER
00291  08F7             
00292  08F7  A9 FF                 LDA     #$FF
00293  08F9             WAIT
00294  08F9  CD 12 D0              CMP     VIC_RASTER
00295  08FC  D0 FB                 BNE     WAIT
00296  08FE             
00297  08FE  A9 02                 LDA     #VIC_RED
00298  0900  8D 20 D0              STA     VIC_BORDERC
00299  0903             
00300  0903             ;**********************
00301  0903             ; BACKGROUND SCROLLING
00302  0903             ;**********************
00303  0903             
00304  0903                        ; SCROLL FAST STAR
00305  0903  18                    CLC
00306  0904  AD 2B B1              LDA     STAR_CHARS1+3
00307  0907  2A                    ROL
00308  0908  8D 2B B1              STA     STAR_CHARS1+3
00309  090B  AD 23 B1              LDA     STAR_CHARS0+3
00310  090E  2A                    ROL
00311  090F  8D 23 B1              STA     STAR_CHARS0+3
00312  0912  90 08                 BCC     @NOL
00313  0914  AD 2B B1              LDA     STAR_CHARS1+3
00314  0917  09 01                 ORA     #$01
00315  0919  8D 2B B1              STA     STAR_CHARS1+3
00316  091C             @NOL       
00317  091C             
00318  091C                        ; CHECK IF SCROLL SLOW STAR
00319  091C  A6 13                 LDX     FRAMECT
00320  091E  E8                    INX
00321  091F  86 13                 STX     FRAMECT
00322  0921  8A                    TXA
00323  0922  29 01                 AND     #$01
00324  0924  D0 19                 BNE     @NOS
00325  0926             
00326  0926                        ; SCROLL LOW STAR
00327  0926  18                    CLC
00328  0927  AD 2F B1              LDA     STAR_CHARS1+7
00329  092A  2A                    ROL
00330  092B  8D 2F B1              STA     STAR_CHARS1+7
00331  092E  AD 27 B1              LDA     STAR_CHARS0+7
00332  0931  2A                    ROL
00333  0932  8D 27 B1              STA     STAR_CHARS0+7
00334  0935  90 08                 BCC     @NOR
00335  0937  AD 2F B1              LDA     STAR_CHARS1+7
00336  093A  09 01                 ORA     #$01
00337  093C  8D 2F B1              STA     STAR_CHARS1+7
00338  093F             @NOR
00339  093F                        
00340  093F                        
00341  093F             @NOS
00342  093F             
00343  093F             
00344  093F             ; 1 SCROLL SCREEN 1 CHAR AT A TIME
00345  093F             ; 2 RESTORE BACKGROUND
00346  093F             ; CREATE LINES BY "LEVEL DESIGN"
00347  093F             ; ADD SPRITE   -> FUN
00348  093F             ; SCROLL SCREEN AT FINE RESOLUTION
00349  093F             ; FIX BACKGROUND AT FINE RESOLUTION
00350  093F             
00351  093F                        
00352  093F             ; ******************
00353  093F             ; SCROLL FRONT
00354  093F             ; ******************
00355  093F                        
00356  093F                        ; FOR EACH OBJECTS
00357  093F             
00358  093F                        ; IF X1 IS NEGATIVE, SKIP THIS.
00359  093F                        ; AT X1-DELTA
00360  093F                        ; DRAW FRONT
00361  093F                        ; IF DELTA >1
00362  093F                        ; FOR EACH REMAINING DELTA, DRAW MIDDLE
00363  093F             
00364  093F                        ; SUBTRACT DELTA FROM L
00365  093F                        ; SUBTRACT DELTA FROM X1
00366  093F             
00367  093F                        ; IF L <=0
00368  093F                        ; DRAW END AT L+39
00369  093F                        ; IF L+39 <0 , RESET OBJECT
00370  093F                        ; DRAW BACKGROUNDS FOR EACH DELTA
00371  093F             
00372  093F                        ; DONE
00373  093F             O0_FU=85
00374  093F             O0_FM=66
00375  093F             O0_FB=74
00376  093F             O0_MU=67
00377  093F             O0_MM=102
00378  093F             O0_MB=67
00379  093F             O0_BU=73
00380  093F             O0_BM=72
00381  093F             O0_BB=75
00382  093F             
00383  093F             
00384  093F                        ; (WE MAY NOT NEED X2)
00385  093F             OBJECTGEN
00386  093F             
00387  093F             ; VARIABLES
00388  093F             @CUROBJ    = $FF   ; CURRENT OBJECT OFFSET, BYTE
00389  093F             @VH        = $FE   ; JUST A VARIABLE
00390  093F             @FFLAG     = $FD   ; PAINT HEAD FOLLOWER ?
00391  093F             @HFLAG     = $FC   ; PAINT HEAD ?
00392  093F             @VHX       = $FB   ; CURRENT OBJECT X (WHERE HEAD IS)
00393  093F             @HFOLLOWLEN = $FA   ; HOW LONG THE TRAIL AFTER PAINTING THE HEAD
00394  093F             @HFSKIPLEN = $F9   ; HOW MANY CHARS TO SKIP BEFORE PAINTING THE HEAD TRAIL
00395  093F             
00396  093F  A9 06                 LDA     #VIC_BLUE
00397  0941  8D 20 D0              STA     VIC_BORDERC
00398  0944             
00399  0944             
00400  0944  A9 02                 LDA     #2              ; SCROLL 0-4
00401  0946  85 21                 STA     DELTA           ; JUST FIXED SCROLLING BY 2
00402  0948             
00403  0948                        ; OBJECT PTR
00404  0948  A2 00                 LDX     #0
00405  094A  86 FF                 STX     @CUROBJ
00406  094C             
00407  094C             
00408  094C  BD D8 0A              LDA     OB_TYPE+OBJTABLE,X      ; TEST IF OBJECT IS LIVE
00409  094F  D0 03                 BNE     @DOTHISOBJECT
00410  0951  4C 12 0A              JMP     @ENDOBJ
00411  0954             
00412  0954             @DOTHISOBJECT 
00413  0954             
00414  0954                        ; ******
00415  0954                        ; MOVE OBJECT LEFT
00416  0954                        ; ******
00417  0954  BD DA 0A              LDA     OB_L+OBJTABLE,X
00418  0957  38                    SEC
00419  0958  E5 21                 SBC     DELTA
00420  095A  9D DA 0A              STA     OB_L+OBJTABLE,X
00421  095D             
00422  095D  BD DC 0A              LDA     OB_X1+OBJTABLE,X
00423  0960  38                    SEC
00424  0961  E5 21                 SBC     DELTA
00425  0963  9D DC 0A              STA     OB_X1+OBJTABLE,X
00426  0966  85 FB                 STA     @VHX
00427  0968             
00428  0968                        ; AVOID PAINTING IF X1 IS >39
00429  0968  C9 28                 CMP     #40
00430  096A  30 03                 BMI     @VISIBLE
00431  096C  4C 12 0A              JMP     @ENDOBJ
00432  096F             
00433  096F             @VISIBLE
00434  096F  A0 00                 LDY     #0
00435  0971  A5 FB                 LDA     @VHX                    ; X1 IS HEAD OF OBJECT
00436  0973  30 02                 BMI     @NOHEAD                 ; IF X1 IS NEGATIVE, NO NEED TO PAINT HEAD
00437  0975  A0 FF                 LDY     #$FF
00438  0977             @NOHEAD
00439  0977  84 FC                 STY     @HFLAG
00440  0979             
00441  0979  A5 21                 LDA     DELTA
00442  097B  85 FA                 STA     @HFOLLOWLEN
00443  097D  38                    SEC
00444  097E  A9 27                 LDA     #39
00445  0980  E5 FB                 SBC     @VHX
00446  0982  C5 21                 CMP     DELTA
00447  0984  10 02                 BPL     @FULLHFOLLOW
00448  0986  85 FA                 STA     @HFOLLOWLEN     ; THIS IS HOW LONG IS THE HEAD TRAIL TO PAINT.
00449  0988             @FULLHFOLLOW 
00450  0988             
00451  0988  A9 AB                 LDA     #$AB
00452  098A  20 81 0A              JSR     PRINTA
00453  098D             
00454  098D             
00455  098D                        ; CALCULATE HOW MUCH HEAD TRAIL TO SKIP (IN CASE THE TRAIL IS TOO MUCH ON THE LEFT)
00456  098D  38                    SEC
00457  098E  A9 FF                 LDA     #-1
00458  0990  E5 FB                 SBC     @VHX
00459  0992  10 02                 BPL     @HFSKIP
00460  0994  A9 00                 LDA     #0
00461  0996             @HFSKIP
00462  0996  85 F9                 STA     @HFSKIPLEN
00463  0998             
00464  0998                        ; HOW MANY CHARACTER TO _ACTUALLY_ PAINT FOR THE HEAD FOLLOW LENGTH
00465  0998  38                    SEC
00466  0999  A5 FA                 LDA     @HFOLLOWLEN
00467  099B  E5 F9                 SBC     @HFSKIPLEN
00468  099D  85 FA                 STA     @HFOLLOWLEN
00469  099F             
00470  099F                        ;
00471  099F                        ; CHECK IF X1 IS >38, IN THAT CASE, NO NEED TO PAINT THE HEAD ERASE COLUMN
00472  099F  A0 00                 LDY     #0
00473  09A1  C9 27                 CMP     #39
00474  09A3  10 02                 BPL     @NOFOLLOW               ; NO NEED TO PAINT THE SLICE NEXT TO HEAD
00475  09A5  A0 FF                 LDY     #$FF
00476  09A7             @NOFOLLOW  
00477  09A7  84 FD                 STY     @FFLAG                   ; IF THIS IS ON, PAINT THE NO ERASE COLUMN
00478  09A9             
00479  09A9                        ; ***********
00480  09A9                        ; PAINT HEAD
00481  09A9                        ; ***********
00482  09A9             
00483  09A9  BD D9 0A              LDA     OB_H+OBJTABLE,X
00484  09AC  85 FE                 STA     @VH
00485  09AE             
00486  09AE  BD DB 0A              LDA     OB_Y+OBJTABLE,X         ; CURSCRNPTR = *(MULTABLE+O.Y*2)
00487  09B1  0A                    ASL
00488  09B2  AA                    TAX                             ; X = O.Y*2
00489  09B3  BD A6 0A              LDA     MULTABLE,X
00490  09B6  85 18                 STA     CURSCRNPTR
00491  09B8  BD A7 0A              LDA     MULTABLE+1,X
00492  09BB  85 19                 STA     CURSCRNPTR+1
00493  09BD             
00494  09BD                        ; REQUIREMENT: A IS NON ZERO HERE (LAST STA IS HIGH OF SCREEN PTR, WHICH IS $8000+)
00495  09BD             
00496  09BD             
00497  09BD                        ; TOP ROW
00498  09BD  24 FC                 BIT     @HFLAG
00499  09BF  F0 06                 BEQ     @NOTOPHEAD
00500  09C1                        ; SET SCREEN CHARACTER
00501  09C1  A4 FB                 LDY     @VHX                    ; X = O.X1, WE COULD OPTIMIZE THIS TO ZEROPAGE
00502  09C3  A9 55                 LDA     #O0_FU                  ; *CURSCRNPTR+X
00503  09C5  91 18                 STA     (CURSCRNPTR),Y
00504  09C7             @NOTOPHEAD 
00505  09C7                        ; TOP ROW FOLLOW
00506  09C7             
00507  09C7  24 FD                 BIT     @FFLAG                   ; TEST IF NEED TO PAIN THE FOLLOW COLUMN
00508  09C9  F0 05                 BEQ     @NOTOPFOLLOW
00509  09CB  C8                    INY
00510  09CC  A9 43                 LDA     #O0_MU
00511  09CE  91 18                 STA     (CURSCRNPTR),Y
00512  09D0             @NOTOPFOLLOW 
00513  09D0                        
00514  09D0  A4 FE                 LDY     @VH
00515  09D2  88                    DEY
00516  09D3  F0 A2                 BEQ     @NOHEAD
00517  09D5             
00518  09D5             @MOREMIDDLE 
00519  09D5                        ; NEXT ROW
00520  09D5  18                    CLC
00521  09D6  A5 18                 LDA     CURSCRNPTR              ; CURSCRNPTR += 40
00522  09D8  69 28                 ADC     #40
00523  09DA  85 18                 STA     CURSCRNPTR
00524  09DC  A5 19                 LDA     CURSCRNPTR+1
00525  09DE  69 00                 ADC     #0
00526  09E0  85 19                 STA     CURSCRNPTR+1
00527  09E2             
00528  09E2                        ; CHECK IF WE NEED TO PAINT THE MIDDLE
00529  09E2  88                    DEY
00530  09E3  84 FE                 STY     @VH
00531  09E5  F0 18                 BEQ     @NOMIDDLE
00532  09E7             
00533  09E7                        ; MIDDLE
00534  09E7  24 FC                 BIT     @HFLAG
00535  09E9  F0 06                 BEQ     @NOMIDHEAD
00536  09EB  A4 FB                 LDY     @VHX                    ; SET SCREEN CHARACTER
00537  09ED  A9 42                 LDA     #O0_FM
00538  09EF  91 18                 STA     (CURSCRNPTR),Y
00539  09F1             @NOMIDHEAD 
00540  09F1                        ; MIDDLE FOLLOW
00541  09F1  24 FD                 BIT     @FFLAG
00542  09F3  F0 05                 BEQ     @NOMIDFOLLOW
00543  09F5  C8                    INY
00544  09F6  A9 66                 LDA     #O0_MM
00545  09F8  91 18                 STA     (CURSCRNPTR),Y
00546  09FA             @NOMIDFOLLOW 
00547  09FA             
00548  09FA  A4 FE                 LDY     @VH
00549  09FC  4C D5 09              JMP     @MOREMIDDLE
00550  09FF             
00551  09FF             
00552  09FF             @NOMIDDLE
00553  09FF                        ; BOTTOM
00554  09FF  24 FC                 BIT     @HFLAG
00555  0A01  F0 06                 BEQ     @NOBOTHEAD
00556  0A03  A4 FB                 LDY     @VHX
00557  0A05  A9 4A                 LDA     #O0_FB
00558  0A07  91 18                 STA     (CURSCRNPTR),Y
00559  0A09             @NOBOTHEAD 
00560  0A09                        ; BOTTOM FOLLOW
00561  0A09  24 FD                 BIT     @FFLAG
00562  0A0B  F0 05                 BEQ     @NOBOTTOMFOLLOW
00563  0A0D  C8                    INY
00564  0A0E  A9 43                 LDA     #O0_MB
00565  0A10  91 18                 STA     (CURSCRNPTR),Y
00566  0A12             @NOBOTTOMFOLLOW 
00567  0A12             
00568  0A12                        
00569  0A12             @ENDOBJ
00570  0A12  A6 FF                 LDX     @CUROBJ                  ; RESTORE CUR OBJ POINTER IN X
00571  0A14                        ; GO THE NEXT OBJECT, PUT THE CURRENT OBJECT IN X AGAIN
00572  0A14                        
00573  0A14                        
00574  0A14             
00575  0A14  A9 00                 LDA     #VIC_BLACK
00576  0A16  8D 20 D0              STA     VIC_BORDERC
00577  0A19             
00578  0A19  4C F7 08              JMP     FOREVER
00579  0A1C             
00580  0A1C             
00581  0A1C             ; ****************************************
00582  0A1C             ; PAINTS 3 ROW WITH COLOR IN A
00583  0A1C             ; INPUT: CURCOLOR CURRENT COLOR POINTER
00584  0A1C             ; ****************************************
00585  0A1C             
00586  0A1C             TRIBAND
00587  0A1C  A0 00                 LDY     #0
00588  0A1E             @NEXTCOLOR 
00589  0A1E  91 14                 STA     (CURCOLOR),Y
00590  0A20  C8                    INY
00591  0A21  C0 78                 CPY     #120
00592  0A23  D0 F9                 BNE     @NEXTCOLOR
00593  0A25                        
00594  0A25             
00595  0A25             
00596  0A25  18                    CLC
00597  0A26  A5 14                 LDA CURCOLOR
00598  0A28  69 78                 ADC #<120
00599  0A2A  85 14                 STA CURCOLOR
00600  0A2C  A5 15                 LDA CURCOLOR+1
00601  0A2E  69 00                 ADC #>120
00602  0A30  85 15                 STA CURCOLOR+1
00603  0A32                        
00604  0A32             
00605  0A32  60                    RTS
00606  0A33             
00607  0A33             ; **************************
00608  0A33             ; POINTERS TO EACH CHAR ROW
00609  0A33             ; DESTROYS ALL REGISTERS
00610  0A33             ; **************************
00611  0A33             INITMULTABLE 
00612  0A33  A9 00                 LDA     #<SCREEN
00613  0A35  85 16                 STA     CURPTR
00614  0A37  A9 84                 LDA     #>SCREEN
00615  0A39  85 17                 STA     CURPTR+1
00616  0A3B             
00617  0A3B  A2 00                 LDX     #0
00618  0A3D  A0 19                 LDY     #25
00619  0A3F             
00620  0A3F             @NEXT      
00621  0A3F  A5 16                 LDA     CURPTR          ; MULTABLE[X] = *CURPTR
00622  0A41  9D A6 0A              STA     MULTABLE,X
00623  0A44  E8                    INX
00624  0A45  A5 17                 LDA     CURPTR+1
00625  0A47  9D A6 0A              STA     MULTABLE,X
00626  0A4A  E8                    INX
00627  0A4B  88                    DEY
00628  0A4C  F0 10                 BEQ     @DONE           ; IF (ALL ROWS DONE) EXIT
00629  0A4E                        
00630  0A4E  18                    CLC                    ; *CURPTR+=40
00631  0A4F  A5 16                 LDA     CURPTR
00632  0A51  69 28                 ADC     #40
00633  0A53  85 16                 STA     CURPTR
00634  0A55  A5 17                 LDA     CURPTR+1
00635  0A57  69 00                 ADC     #0
00636  0A59  85 17                 STA     CURPTR+1
00637  0A5B  4C 3F 0A              JMP     @NEXT
00638  0A5E                        
00639  0A5E             @DONE
00640  0A5E  60                    RTS
00641  0A5F             
00642  0A5F             INITLEVEL
00643  0A5F  A9 01                 LDA     #1
00644  0A61  85 21                 STA     DELTA   ; SCROLL BY 1 FOR NOW
00645  0A63                        
00646  0A63             
00647  0A63             ;       INIT OBJTABLE WITH "DEMO" OBJECT
00648  0A63  A9 01                 LDA     #1
00649  0A65  8D D8 0A              STA     OBJTABLE+OB_TYPE
00650  0A68  A9 14                 LDA     #20
00651  0A6A  8D D9 0A              STA     OBJTABLE+OB_H
00652  0A6D  A9 14                 LDA     #20
00653  0A6F  8D DA 0A              STA     OBJTABLE+OB_L
00654  0A72  A9 03                 LDA     #3
00655  0A74  8D DB 0A              STA     OBJTABLE+OB_Y
00656  0A77  A9 28                 LDA     #40
00657  0A79  8D DC 0A              STA     OBJTABLE+OB_X1
00658  0A7C             
00659  0A7C             
00660  0A7C  A9 00                 LDA     #0
00661  0A7E  85 20                 STA     DELAY
00662  0A80             
00663  0A80  60                    RTS
00664  0A81             
00665  0A81             
00666  0A81             PRINTA
00667  0A81  85 12                 STA     ATEMP
00668  0A83  4A                    LSR
00669  0A84  4A                    LSR
00670  0A85  4A                    LSR
00671  0A86  4A                    LSR
00672  0A87  29 0F                 AND     #$0F
00673  0A89  09 30                 ORA     #$30
00674  0A8B  C9 3A                 CMP     #$3A
00675  0A8D  30 03                 BMI     @OK1
00676  0A8F  38                    SEC
00677  0A90  E9 39                 SBC     #$39
00678  0A92             @OK1
00679  0A92  8D 00 84              STA     SCREEN
00680  0A95  A5 12                 LDA     ATEMP
00681  0A97  29 0F                 AND     #$0F
00682  0A99  09 30                 ORA     #$30
00683  0A9B  C9 3A                 CMP     #$3A
00684  0A9D  30 03                 BMI     @OK2
00685  0A9F  38                    SEC
00686  0AA0  E9 39                 SBC     #$39
00687  0AA2             @OK2
00688  0AA2  8D 01 84              STA     SCREEN+1
00689  0AA5  60                    RTS
00690  0AA6             
00691  0AA6             MULTABLE
00692  0AA6  00 00 00              DCW 25,0
00693  0AD8             
00694  0AD8             ; OBJECTS ARE 10 BYTES, THERE ARE 20 OF THEM HERE
00695  0AD8             OBJTABLE
00696  0AD8  00 00 00              DCB 200,0
00697  0BA0             

******* 10 Label(s) *******
forever = $08F7 
initlevel = $0A5F 
initmultable = $0A33 
multable = $0AA6 
objectgen = $093F 
objtable = $0AD8 
printa = $0A81 
start = $0830 
triband = $0A1C 
WAIT = $08F9 

******* 3 Unused label(s) *******
@done
@dothisobject
@endobj
@fullhfollow
@hfskip
@loop
@moremiddle
@next
@nextcolor
@nobothead
@nobottomfollow
@nofollow
@nohead
@nol
@nomiddle
@nomidfollow
@nomidhead
@nor
@nos
@notopfollow
@notophead
@nulchar
@ok1
@ok2
@rowloop
@visible
objectgen
objtable
start

******* 88 Variable(s) *******
@curobj  = $00FF
@fflag  = $00FD
@hflag  = $00FC
@hfollowlen  = $00FA
@hfskiplen  = $00F9
@vh  = $00FE
@vhx  = $00FB
atemp  = $0012
chars  = $B000
charsetend  = $BFFF
CIAB_PRA  = $DD00
curcolor  = $0014
curptr  = $0016
curscrnptr  = $0018
delay  = $0020
delta  = $0021
framect  = $0013
o0_bb  = $004B
o0_bm  = $0048
o0_bu  = $0049
o0_fb  = $004A
o0_fm  = $0042
o0_fu  = $0055
o0_mb  = $0043
o0_mm  = $0066
o0_mu  = $0043
ob_h  = $0001
ob_l  = $0002
ob_type  = $0000
ob_x1  = $0004
ob_y  = $0003
screen  = $8400
scrptr  = $0010
star_chars0  = $B120
star_chars1  = $B128
starchar  = $0024
tgt_c64  = $0001
VIC_BG0C  = $D021
VIC_BG1C  = $D022
VIC_BG2C  = $D023
VIC_BG3C  = $D024
VIC_BLACK  = $0000
VIC_BLUE  = $0006
VIC_BORDERC  = $D020
VIC_BROWN  = $0009
VIC_COLOR  = $D800
VIC_CYAN  = $0003
VIC_DARKGREY  = $000B
VIC_GREEN  = $0005
VIC_GREY  = $000C
VIC_LIGHTBLUE  = $000E
VIC_LIGHTGRAY  = $000F
VIC_LIGHTGREEN  = $000D
VIC_LIGHTRED  = $000A
VIC_MEM  = $D018
VIC_ORANGE  = $0008
VIC_RASTER  = $D012
VIC_RED  = $0002
VIC_SP0_X  = $D000
VIC_SP0_Y  = $D001
VIC_SP0C  = $D027
VIC_SP0MC  = $D025
VIC_SP1_X  = $D002
VIC_SP1_Y  = $D003
VIC_SP1C  = $D028
VIC_SP1MC  = $D026
VIC_SP2_X  = $D004
VIC_SP2_Y  = $D005
VIC_SP2C  = $D029
VIC_SP3_X  = $D006
VIC_SP3_Y  = $D007
VIC_SP3C  = $D02A
VIC_SP4_X  = $D008
VIC_SP4_Y  = $D009
VIC_SP4C  = $D02B
VIC_SP5_X  = $D00A
VIC_SP5_Y  = $D00B
VIC_SP5C  = $D02C
VIC_SP6_X  = $D00C
VIC_SP6_Y  = $D00D
VIC_SP6C  = $D02D
VIC_SP7_X  = $D00E
VIC_SP7_Y  = $D00F
VIC_SP7C  = $D02E
VIC_SPX  = $D010
VIC_VIOLET  = $0004
VIC_WHITE  = $0001
VIC_YELLOW  = $0007
******* 26 Unused variables(s) *******
chars
o0_bb
o0_bm
o0_bu
ob_h
ob_l
ob_type
ob_x1
ob_y
star_chars0
star_chars1
tgt_c64
VIC_BG0C
VIC_BG1C
VIC_BG2C
VIC_BG3C
VIC_BROWN
VIC_CYAN
VIC_DARKGREY
VIC_GREEN
VIC_GREY
VIC_LIGHTGRAY
VIC_LIGHTGREEN
VIC_ORANGE
VIC_SP0_X
VIC_SP0_Y
VIC_SP0C
VIC_SP0MC
VIC_SP1_X
VIC_SP1_Y
VIC_SP1C
VIC_SP1MC
VIC_SP2_X
VIC_SP2_Y
VIC_SP2C
VIC_SP3_X
VIC_SP3_Y
VIC_SP3C
VIC_SP4_X
VIC_SP4_Y
VIC_SP4C
VIC_SP5_X
VIC_SP5_Y
VIC_SP5C
VIC_SP6_X
VIC_SP6_Y
VIC_SP6C
VIC_SP7_X
VIC_SP7_Y
VIC_SP7C
VIC_SPX
VIC_VIOLET

